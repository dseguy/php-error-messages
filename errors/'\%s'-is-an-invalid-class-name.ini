id = "'\%s'-is-an-invalid-class-name"
error = "'\%s' is an invalid class name"
phpVersion = "8.3+"
level = "E_COMPILE_ERROR"
exception = ""
code = "<?php

function foo(\self $a) {};

function foo( $a) : \self {};

class X {
    private \self $f;
    private \x $f2;
}

?>"
description = "``self`` describes the current class. It is a relative class name, as it has no literal value. 

As such, it doesn't have an absolute path version, such as ``\self``. Hence, the error emitted there.

This error is also emitted for ``static`` and ``parent``. 

It was possible to circumvent this check until PHP 8.1, with ``namespace\%s`` syntax, where ``namespace`` represents the current namespace."
alternative[] = "Remove the initial backslash."
alternative[] = "Use the literal name of the intended class."
related[] = "type-declaration-'%s'-must-be-unqualified"
related[] = "'namespace\%s'-is-an-invalid-class-name"
tags[] = "relative-types"
tags[] = "fully-qualified-name"
examples[] = "'\self' is an invalid class name"
examples[] = "'\parent' is an invalid class name"
examples[] = "'\static' is an invalid class name"
seeAlso[] = ""
features[] = "self"
features[] = "parent"
features[] = "static"
previous = ""
next = ""
analyzer[] = ""