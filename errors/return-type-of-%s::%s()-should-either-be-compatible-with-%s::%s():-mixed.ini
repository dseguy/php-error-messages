id = "return-type-of-%s::%s()-should-either-be-compatible-with-%s::%s():-mixed"
error = "Return type of %s::%s() should either be compatible with %s::%s(): mixed"
phpVersion = "8.1+"
level = "E_COMPILE_ERROR"
exception = ""
code = "<?php

class MyJsonSerialize implements JsonSerialize { 
    function jsonserialize() : int {}
}

?>"
description = "Native PHP interfaces, which define a type, expect the derived methods to use the same time. In particular, a ``mixed`` return type was added to some interfaces and must be available with child classes. 

Since PHP 8.1, the mixed return type is now enforced, and a deprecated notice is displayed.

One alternative is to add the expected return type; a temporary solution is to the `#[ReturnTypeWillChange]` attribute. The attribute makes the warning disappear, but must be updated in the long run to keep in line with PHP recommendations.

This rule covers the following interfaces : 

+ ArrayAccess
+ Countable
+ Exception
+ FilterIterator
+ Iterator
+ JsonSerializable
+ php_user_filter
+ SessionHandlerInterface."
alternative[] = "Use the correct return type for the methods from the interfaces."
alternative[] = "Use the the ``#[ReturnTypeWillChange]`` to hide the error message."
alternative[] = "Remove the interface from this class."
alternative[] = "Remove the offending method."
related[] = ""
examples[] = "Return type of MyJsonSerialize::jsonserialize() should either be compatible with JsonSerialize::jsonserialize(): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice"
tags[] = ""
seeAlso[] = ""
features[] = "interface"
features[] = "ReturnTypeWillChange"
previous = ""
next = ""
extension[] = ""
analyzer[] = ""